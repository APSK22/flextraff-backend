name: CI - Tests and Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Create test environment file
      run: |
        echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
        echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> .env
        echo "API_HOST=127.0.0.1" >> .env
        echo "API_PORT=8001" >> .env
        echo "DEBUG=true" >> .env
        echo "LOG_LEVEL=INFO" >> .env

    - name: Run code formatting check (Black)
      run: |
        black --check --diff app/ tests/ main.py

    - name: Run import sorting check (isort)
      run: |
        isort --check-only --diff app/ tests/ main.py

    - name: Run linting (flake8)
      run: |
        flake8 app/ tests/ main.py --max-line-length=88 --extend-ignore=E203,W503

    - name: Run type checking (mypy)
      run: |
        mypy app/ main.py --ignore-missing-imports

    - name: Run pytest with coverage
      run: |
        pytest tests/ --cov=app --cov-report=xml --cov-report=html --verbose

    - name: Run comprehensive test suite
      run: |
        python run_tests.py comprehensive

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          htmlcov/
          pytest-report.html
          coverage.xml

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security scanning tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit semgrep

    - name: Run safety check for vulnerabilities
      run: |
        safety check --json || true

    - name: Run bandit security linter
      run: |
        bandit -r app/ -f json || true

    - name: Run semgrep security scan
      run: |
        semgrep --config=auto app/ --json || true